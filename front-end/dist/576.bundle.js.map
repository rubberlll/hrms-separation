{"version":3,"file":"576.bundle.js","mappings":"qOAoBA,MA2JA,EA3J6BA,KAC3B,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAWC,IAAgBF,EAAAA,EAAAA,UAAyB,KACpDG,EAAYC,IAAiBJ,EAAAA,EAAAA,UAAS,IAGvCK,EAAiBC,UACrBP,GAAW,GACX,IACE,MAAMQ,QAAiBC,EAAAA,EAAQC,IAAI,UACnCC,QAAQC,IAAI,gBAAiBJ,EAASK,MAEX,MAAvBL,EAASK,KAAKC,KAChBX,EAAaK,EAASK,KAAKA,MAE3BE,EAAAA,GAAQC,MACN,YAAYR,EAASK,KAAKE,SAAW,SAG3C,CAAE,MAAOC,GACPL,QAAQK,MAAM,YAAaA,GAC3BD,EAAAA,GAAQC,MAAM,WAChB,CAAE,QACAhB,GAAW,EACb,IAGFiB,EAAAA,EAAAA,YAAU,KACRX,GAAgB,GACf,IAGH,MA6BMY,EAAU,CACd,CACEC,MAAO,MACPC,UAAW,WACXC,IAAK,WACLC,cAAe,CAAClB,GAChBmB,SAAUA,CAACC,EAAeC,IACxBA,EAAOC,SAASC,cAAcC,SAASJ,EAAMG,gBAEjD,CACER,MAAO,KACPC,UAAW,QACXC,IAAK,SAEP,CACEF,MAAO,KACPC,UAAW,QACXC,IAAK,SAEP,CACEF,MAAO,KACPC,UAAW,aACXC,IAAK,cAEP,CACEF,MAAO,OACPC,UAAW,YACXC,IAAK,aAEP,CACEF,MAAO,KACPC,UAAW,SACXC,IAAK,UAEP,CACEF,MAAO,OACPC,UAAW,iBACXC,IAAK,kBAEP,CACEF,MAAO,KACPE,IAAK,SACLQ,OAAQA,CAACC,EAAuBL,IAC9BM,EAAAA,cAACC,EAAAA,GAAM,CACLC,QAAM,EACNC,QAASA,IA1EE3B,WACjB4B,EAAAA,EAAMC,QAAQ,CACZjB,MAAO,OACPkB,QAAS,cACTC,OAAQ,KACRC,WAAY,KACZC,KAAMjC,UACJ,IACE,MAAMC,QAAiBC,EAAAA,EAAQgC,IAAI,UAAUC,IAAc,CACzDC,OAAQ,WACRC,KAAM,SAGmB,MAAvBpC,EAASK,KAAKC,MAChBC,EAAAA,GAAQ8B,QAAQ,SAEhBvC,KAEAS,EAAAA,GAAQC,MAAM,QAAQR,EAASK,KAAKE,SAAW,SAEnD,CAAE,MAAOC,GACPL,QAAQK,MAAM,UAAWA,GACzBD,EAAAA,GAAQC,MAAM,SAChB,IAEF,EAiDmB8B,CAAWrB,EAAOJ,KACjC0B,SAA4B,UAAlBtB,EAAOkB,QAClB,QAQDK,EAAe9C,EAAU+C,QAC5BC,GAA+B,aAAlBA,EAASN,OAGzB,OAAI7C,EACKgC,EAAAA,cAACoB,EAAAA,EAAI,CAACC,KAAK,UAGflD,GAAkC,IAArBA,EAAUmD,OAIA,IAAxBL,EAAaK,OACRtB,EAAAA,cAAA,WAAK,aAIZA,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAI,QACJA,EAAAA,cAACuB,EAAAA,EAAK,CAACC,MAAO,CAAEC,aAAc,KAC5BzB,EAAAA,cAAC0B,EAAAA,EAAK,CACJC,YAAY,SACZlC,MAAOpB,EACPuD,SAAWC,GAAMvD,EAAcuD,EAAEC,OAAOrC,OACxCsC,OAAQ/B,EAAAA,cAACgC,EAAAA,EAAc,MACvBR,MAAO,CAAES,MAAO,OAElBjC,EAAAA,cAACC,EAAAA,GAAM,CAACE,QAASA,IAAM7B,EAAc,KAAK,SAE5C0B,EAAAA,cAACkC,EAAAA,EAAK,CACJC,WAAYlB,EACZ9B,QAASA,EACTiD,OAAO,MACPC,WAAY,CAAEC,SAAU,OAxBrBtC,EAAAA,cAAA,WAAK,UA0BN,ECrKV,EAJuBuC,IACdvC,EAAAA,cAACwC,EAAS,K","sources":["webpack://my_pra/./src/components/UserTable.tsx","webpack://my_pra/./src/pages/User.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Card, Spin, message, Table, Input, Button, Modal, Space } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport request from \"../utils/request\";\n\ninterface EmployeeType {\n  key: string;\n  username: string;\n  email: string;\n  phone: string;\n  role: string;\n  status: string;\n  department: string;\n  departmentId: string;\n  entryDate: string;\n  employmentType: string;\n  avatar: string;\n  createdAt: string;\n}\n\nconst UserDetail: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const [employees, setEmployees] = useState<EmployeeType[]>([]);\n  const [searchText, setSearchText] = useState(\"\");\n\n  // 获取所有用户数据\n  const fetchEmployees = async () => {\n    setLoading(true);\n    try {\n      const response = await request.get(\"/users\");\n      console.log(\"API Response:\", response.data);\n\n      if (response.data.code === 200) {\n        setEmployees(response.data.data);\n      } else {\n        message.error(\n          `获取员工信息失败：${response.data.message || \"未知错误\"}`\n        );\n      }\n    } catch (error) {\n      console.error(\"获取员工信息失败:\", error);\n      message.error(\"获取员工信息失败\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchEmployees();\n  }, []);\n\n  // 解雇员工\n  const handleFire = async (employeeId: string) => {\n    Modal.confirm({\n      title: \"确认解雇\",\n      content: \"您确定要解雇该员工吗？\",\n      okText: \"确认\",\n      cancelText: \"取消\",\n      onOk: async () => {\n        try {\n          const response = await request.put(`/users/${employeeId}`, {\n            status: \"inactive\",\n            role: \"user\",\n          });\n\n          if (response.data.code === 200) {\n            message.success(\"员工已解雇\");\n            // 更新员工列表\n            fetchEmployees();\n          } else {\n            message.error(`解雇失败：${response.data.message || \"未知错误\"}`);\n          }\n        } catch (error) {\n          console.error(\"解雇员工失败:\", error);\n          message.error(\"解雇员工失败\");\n        }\n      },\n    });\n  };\n\n  // 表格列定义\n  const columns = [\n    {\n      title: \"用户名\",\n      dataIndex: \"username\",\n      key: \"username\",\n      filteredValue: [searchText],\n      onFilter: (value: string, record: EmployeeType) =>\n        record.username.toLowerCase().includes(value.toLowerCase()),\n    },\n    {\n      title: \"邮箱\",\n      dataIndex: \"email\",\n      key: \"email\",\n    },\n    {\n      title: \"电话\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n    },\n    {\n      title: \"部门\",\n      dataIndex: \"department\",\n      key: \"department\",\n    },\n    {\n      title: \"入职日期\",\n      dataIndex: \"entryDate\",\n      key: \"entryDate\",\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      key: \"status\",\n    },\n    {\n      title: \"雇佣类型\",\n      dataIndex: \"employmentType\",\n      key: \"employmentType\",\n    },\n    {\n      title: \"操作\",\n      key: \"action\",\n      render: (text: React.ReactNode, record: EmployeeType) => (\n        <Button\n          danger\n          onClick={() => handleFire(record.key)}\n          disabled={record.status === \"fired\"}\n        >\n          解雇\n        </Button>\n      ),\n    },\n  ];\n\n  // 筛选出role为employee的用户\n  const employeeOnly = employees.filter(\n    (employee) => employee.role === \"employee\"\n  );\n\n  if (loading) {\n    return <Spin size=\"large\" />;\n  }\n\n  if (!employees || employees.length === 0) {\n    return <div>未找到员工信息</div>;\n  }\n\n  if (employeeOnly.length === 0) {\n    return <div>未找到普通员工信息</div>;\n  }\n\n  return (\n    <div>\n      <h1>员工列表</h1>\n      <Space style={{ marginBottom: 16 }}>\n        <Input\n          placeholder=\"搜索员工姓名\"\n          value={searchText}\n          onChange={(e) => setSearchText(e.target.value)}\n          prefix={<SearchOutlined />}\n          style={{ width: 200 }}\n        />\n        <Button onClick={() => setSearchText(\"\")}>清除搜索</Button>\n      </Space>\n      <Table\n        dataSource={employeeOnly}\n        columns={columns}\n        rowKey=\"key\"\n        pagination={{ pageSize: 10 }}\n      />\n    </div>\n  );\n};\n\nexport default UserDetail;\n","import React from \"react\";\nimport UserTable from \"../components/UserTable\";\nconst User: React.FC = () => {\n  return <UserTable />;\n};\n\nexport default User;\n"],"names":["UserDetail","loading","setLoading","useState","employees","setEmployees","searchText","setSearchText","fetchEmployees","async","response","request","get","console","log","data","code","message","error","useEffect","columns","title","dataIndex","key","filteredValue","onFilter","value","record","username","toLowerCase","includes","render","text","React","Button","danger","onClick","Modal","confirm","content","okText","cancelText","onOk","put","employeeId","status","role","success","handleFire","disabled","employeeOnly","filter","employee","Spin","size","length","Space","style","marginBottom","Input","placeholder","onChange","e","target","prefix","SearchOutlined","width","Table","dataSource","rowKey","pagination","pageSize","User","UserTable"],"sourceRoot":""}