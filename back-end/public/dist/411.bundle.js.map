{"version":3,"file":"411.bundle.js","mappings":"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","sources":["webpack://my_pra/./src/pages/recruitment/MyApplications.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Table,\n  Tag,\n  Button,\n  Modal,\n  Spin,\n  Descriptions,\n  Space,\n  Typography,\n  message,\n} from \"antd\";\nimport request from \"../../utils/request\";\nimport { useLoginStore } from \"../../store/useLoginStore\";\n\nconst MyApplications: React.FC = () => {\n  const [applications, setApplications] = useState<any[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [detailVisible, setDetailVisible] = useState(false);\n  const [currentResume, setCurrentResume] = useState<any>(null);\n  const { userInfo, isLogin } = useLoginStore();\n\n  useEffect(() => {\n    if (isLogin) {\n      fetchApplications();\n    }\n  }, [isLogin]);\n\n  const fetchApplications = async () => {\n    if (!userInfo?.userId) {\n      message.error(\"用户信息不完整，无法获取申请记录\");\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await request.get(`/resumes`);\n      // 根据实际数据结构进行过滤，userId是一个包含_id字段的对象\n      const userResumes = (response.data.data || []).filter(\n        (resume: any) => resume.userId?._id === userInfo.userId\n      );\n      console.log(response.data.data);\n      setApplications(userResumes);\n    } catch (error) {\n      console.error(\"获取申请记录失败:\", error);\n      message.error(\"获取申请记录失败\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePreview = (resume: any) => {\n    setCurrentResume(resume);\n    setPreviewVisible(true);\n  };\n\n  const handleViewDetails = (resume: any) => {\n    setCurrentResume(resume);\n    setDetailVisible(true);\n  };\n\n  // 添加一个辅助函数来获取正确的文件URL\n  const getFileUrl = (url: string) => {\n    // 如果URL已经是完整的URL，则直接返回\n    if (url.startsWith(\"http://\") || url.startsWith(\"https://\")) {\n      return url;\n    }\n\n    // 确保URL格式正确，应该是/api/files/而不是/api/uploads/files/\n    if (url.includes(\"/api/files/\")) {\n      return url.replace(\"/api/files/\", \"/api/files/\");\n    }\n\n    // 如果URL以/files开头，则添加/api前缀\n    if (url.startsWith(\"/files/\")) {\n      return `/api${url}`;\n    }\n\n    // 否则，确保URL以/api开头\n    if (!url.startsWith(\"/api\")) {\n      return `/api${url}`;\n    }\n    return url;\n  };\n\n  // 添加一个函数来判断文件类型\n  const isPdfFile = (fileName: string) => {\n    return fileName && fileName.toLowerCase().endsWith(\".pdf\");\n  };\n\n  const columns = [\n    {\n      title: \"申请职位\",\n      dataIndex: \"jobId\",\n      key: \"position\",\n      render: (jobId: any) => jobId?.title || \"未知职位\",\n    },\n    {\n      title: \"申请时间\",\n      dataIndex: \"submittedAt\",\n      key: \"applyDate\",\n      render: (date: string) => new Date(date).toLocaleDateString(),\n    },\n    {\n      title: \"状态\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status: string) => {\n        const statusMap: Record<string, { text: string; color: string }> = {\n          pending: { text: \"待处理\", color: \"blue\" },\n          reviewed: { text: \"已审核\", color: \"orange\" },\n          hired: { text: \"已录用\", color: \"green\" },\n          rejected: { text: \"已拒绝\", color: \"red\" },\n        };\n\n        const { text, color } = statusMap[status] || {\n          text: status,\n          color: \"default\",\n        };\n        return <Tag color={color}>{text}</Tag>;\n      },\n    },\n    {\n      title: \"操作\",\n      key: \"action\",\n      render: (_: any, record: any) => (\n        <Space>\n          <Button type=\"link\" onClick={() => handlePreview(record)}>\n            预览简历\n          </Button>\n          <Button type=\"link\" onClick={() => handleViewDetails(record)}>\n            查看详情\n          </Button>\n        </Space>\n      ),\n    },\n  ];\n\n  const renderEducation = (education: any) => {\n    if (!education) return \"暂无教育信息\";\n    return (\n      <Descriptions column={1} bordered size=\"small\">\n        <Descriptions.Item label=\"学校\">\n          {education.school || \"未填写\"}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"专业\">\n          {education.major || \"未填写\"}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"学位\">\n          {education.degree || \"未填写\"}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"毕业年份\">\n          {education.graduationYear || \"未填写\"}\n        </Descriptions.Item>\n      </Descriptions>\n    );\n  };\n\n  const renderExperience = (experiences: any[]) => {\n    if (!experiences || experiences.length === 0) return \"暂无工作经验\";\n\n    return experiences.map((exp, index) => (\n      <Descriptions\n        key={index}\n        column={1}\n        bordered\n        size=\"small\"\n        style={{ marginBottom: 16 }}\n      >\n        <Descriptions.Item label=\"公司\">\n          {exp.company || \"未填写\"}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"职位\">\n          {exp.position || \"未填写\"}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"时间段\">\n          {exp.duration || \"未填写\"}\n        </Descriptions.Item>\n        <Descriptions.Item label=\"描述\">\n          {exp.description || \"未填写\"}\n        </Descriptions.Item>\n      </Descriptions>\n    ));\n  };\n\n  return (\n    <div style={{ padding: \"24px\" }}>\n      <h2>我的申请记录</h2>\n      {applications.length === 0 && !loading ? (\n        <Typography.Text type=\"secondary\">您还没有提交过申请</Typography.Text>\n      ) : (\n        <Spin spinning={loading}>\n          <Table\n            columns={columns}\n            dataSource={applications}\n            rowKey=\"_id\"\n            pagination={{ pageSize: 10 }}\n          />\n        </Spin>\n      )}\n\n      {/* 简历预览模态框 */}\n      <Modal\n        title=\"简历预览\"\n        open={previewVisible}\n        onCancel={() => setPreviewVisible(false)}\n        footer={null}\n        width={800}\n        styles={{ body: { height: \"80vh\" } }}\n      >\n        {currentResume &&\n          currentResume.fileUrl &&\n          (isPdfFile(currentResume.fileName) ? (\n            <object\n              data={getFileUrl(currentResume.fileUrl)}\n              type=\"application/pdf\"\n              style={{ width: \"100%\", height: \"70vh\" }}\n            >\n              <p>\n                您的浏览器无法直接预览PDF文件。\n                <a\n                  href={getFileUrl(currentResume.fileUrl)}\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  点击下载\n                </a>\n              </p>\n            </object>\n          ) : (\n            <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n              <p>此文件类型不支持直接预览</p>\n              <Button\n                type=\"primary\"\n                onClick={() => window.open(getFileUrl(currentResume.fileUrl))}\n              >\n                下载文件\n              </Button>\n            </div>\n          ))}\n      </Modal>\n\n      {/* 简历详情模态框 */}\n      <Modal\n        title=\"申请详情\"\n        open={detailVisible}\n        onCancel={() => setDetailVisible(false)}\n        footer={null}\n        width={700}\n      >\n        {currentResume && (\n          <div>\n            <Descriptions bordered column={1} style={{ marginBottom: 20 }}>\n              <Descriptions.Item label=\"申请职位\">\n                {currentResume.jobId?.title || \"未知职位\"}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"申请时间\">\n                {new Date(currentResume.submittedAt).toLocaleString()}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"状态\">\n                {(() => {\n                  const statusMap: Record<\n                    string,\n                    { text: string; color: string }\n                  > = {\n                    pending: { text: \"待处理\", color: \"blue\" },\n                    reviewed: { text: \"已审核\", color: \"orange\" },\n                    hired: { text: \"已录用\", color: \"green\" },\n                    rejected: { text: \"已拒绝\", color: \"red\" },\n                  };\n\n                  const { text, color } = statusMap[currentResume.status] || {\n                    text: currentResume.status,\n                    color: \"default\",\n                  };\n                  return <Tag color={color}>{text}</Tag>;\n                })()}\n              </Descriptions.Item>\n              <Descriptions.Item label=\"简历文件\">\n                <Space>\n                  <Typography.Text>{currentResume.fileName}</Typography.Text>\n                  <Button\n                    type=\"link\"\n                    onClick={() =>\n                      window.open(getFileUrl(currentResume.fileUrl))\n                    }\n                  >\n                    下载\n                  </Button>\n                </Space>\n              </Descriptions.Item>\n            </Descriptions>\n\n            <Typography.Title level={5}>教育背景</Typography.Title>\n            {renderEducation(currentResume.education)}\n\n            <Typography.Title level={5} style={{ marginTop: 20 }}>\n              工作经验\n            </Typography.Title>\n            {renderExperience(currentResume.workExperience)}\n\n            <Typography.Title level={5} style={{ marginTop: 20 }}>\n              技能\n            </Typography.Title>\n            {currentResume.skills && currentResume.skills.length > 0 ? (\n              <div>\n                {currentResume.skills.map((skill: string, index: number) => (\n                  <Tag key={index} style={{ margin: \"5px\" }}>\n                    {skill}\n                  </Tag>\n                ))}\n              </div>\n            ) : (\n              \"暂无技能信息\"\n            )}\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default MyApplications;\n"],"names":["MyApplications","applications","setApplications","useState","loading","setLoading","previewVisible","setPreviewVisible","detailVisible","setDetailVisible","currentResume","setCurrentResume","userInfo","isLogin","useLoginStore","useEffect","fetchApplications","async","userId","response","request","get","userResumes","data","filter","resume","_id","console","log","error","message","getFileUrl","url","startsWith","includes","replace","columns","title","dataIndex","key","render","jobId","date","Date","toLocaleDateString","status","text","color","pending","reviewed","hired","rejected","React","Tag","_","record","Space","Button","type","onClick","style","padding","length","Spin","spinning","Table","dataSource","rowKey","pagination","pageSize","Typography","Text","Modal","open","onCancel","footer","width","styles","body","height","fileUrl","fileName","toLowerCase","endsWith","href","target","rel","textAlign","window","Descriptions","bordered","column","marginBottom","Item","label","submittedAt","toLocaleString","Title","level","education","size","school","major","degree","graduationYear","marginTop","experiences","workExperience","map","exp","index","company","position","duration","description","skills","skill","margin"],"sourceRoot":""}